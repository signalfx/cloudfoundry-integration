---
name: signalfx-agent # By convention lowercase with dashes
icon_file: resources/icon.png
label: SignalFx Agent
description: Reports Cloud Foundry platform metrics to SignalFx

# Global defaults (all optional)
#
# org: test-org                         # Name of org to create for your apps
# space: test-space                     # Name of space to create for your apps
apply_open_security_group: true         # Apply open security group, default: false

instance_definition:
  name: instances
  type: integer
  configurable: false
  default: 1
  constraints:
    max: 1

# Specify the packages to be included in your tile.
# The format of the section to include depends on the type
# of package you are describing. For fragments of each type
# that you can copy & paste, see:
#
# https://github.com/cf-platform-eng/tile-generator/blob/master/README.md
#
packages:
- name: signalfx-agent
  type: app
  label: SignalFx Agent
  manifest:
    path: build/libs/cf-agent-VERSION-all.jar
    # XXX: No health check implemented thus far.
    health-check-type: none
    memory: 512M
    instances: 1
    no-route: true

# Include stemcell criteria if you don't want to accept the default.
# Since this stemcell is only used to run pre and post errands, we
# strongly recommend you leave this alone so that your tile always
# runs with the latest stemcell.
#
# stemcell_criteria:
#   os: ubuntu-trusty
#   requires_cpi: false
#   version: '3062'

# Add properties you want to pass to your applications.
# Properties specified here will not be configurable by the user.
#
# properties:
# - name: example_property
#   type: string
#   default: specify a value
#   label: Label for the field on the GUI
#   description: Longer description of the field's purpose
properties:
- name: jmx_ssl_cert_source
  type: string
  default: INLINE
  label: JMX SSL certificate source

# Uncomment this section if you want to display forms with configurable
# properties in Ops Manager. These properties will be passed to your
# applications as environment variables. You can also refer to them
# elsewhere in this template by using:
#     (( .properties.<property-name> ))
#
forms:
- name: signalfx_properties
  label: SignalFx
  description: SignalFx configuration
  properties:
  - name: sfx_access_key
    type: string
    label: SignalFx API access key
    description: SignalFx API access key
  - name: sfx_ingest_url
    type: string
    label: SignalFx ingestion URL
    default: https://ingest.signalfx.com
- name: jmx_properties
  label: Pivotal JMX Bridge
  description: Configuration for connecting to the Pivotal JMX bridge
  properties:
  - name: jmx_ip
    type: ip_address
    label: JMX IP address
    description: IP address of the Pivotal JMX bridge
  - name: jmx_username
    type: string
    label: JMX username
    description: JMX username as configured from the Pivotal JMX bridge
  - name: jmx_password
    type: secret
    label: JMX password
    description: JMX password as configured from the Pivotal JMX bridge
  - name: jmx_ssl_enabled
    type: boolean
    label: Enable SSL
    description: Enabled to connect to the JMX using SSL
    default: false
  - name: jmx_ssl_cert
    type: text
    label: JMX SSL certificate
    description: Public key of the JMX bridge
    optional: true

# Add any dependencies your tile has on other installed products.
# This is often appropriate when using automatic service provisioning
# for any of your packages above, with services provided by other
# products.
#
requires_product_versions:
- name: p-metrics
  version: '>= 1.8'

# Customize upgrade parameters if the defaults don't meet your needs.
#
# update:
#   canaries: 1
#   canary_watch_time: 10000-100000
#   max_in_flight: 1
#   update_watch_time: 10000-100000

# If prior versions of your tile are installed and configured, their
# property values will not be overwritten by new defaults provided
# in this file. If that is your intent, you must do the overwriting
# explicitly using JavaScript migration functions, like so:
#
# migration: |
#   properties['properties']['.properties.org']['value'] = 'system';
